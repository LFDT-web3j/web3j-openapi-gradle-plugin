plugins {
    id 'java'
    id 'java-gradle-plugin'
    id 'idea'
    id 'jacoco'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'com.diffplug.gradle.spotless' version '3.25.0'
    id 'com.gradle.plugin-publish' version '0.10.1'
    id 'de.undercouch.download' version '4.1.1'
}

description = 'Gradle plugin providing tasks to generate Web3j-OpenAPI project from Solidity.'
sourceCompatibility = 1.8

ext {
    web3jVersion = version
    junitVersion = '5.7.0'
    kotlinMultiPlat = '1.3.72'
    shadow = '5.1.0'
    swaggerGen = '2.18.1'
    swaggerPlugin = '2.1.2'
}

apply {
    [
        'jacoco',
        'java',
        'javadoc',
        'repositories',
        'spotless',
    ].each { buildScript ->
        download {
            src "https://raw.githubusercontent.com/web3j/build-tools/master/gradle/$buildScript/build.gradle"
            dest "$rootDir/gradle/$buildScript/build.gradle"
            overwrite true
            quiet true
            onlyIfModified true
        }
        from("$rootDir/gradle/$buildScript/build.gradle")
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://plugins.gradle.org/m2/'
    }
    maven {
        url 'https://repo.gradle.org/gradle/libs-releases'
    }
}

dependencies {
    implementation "org.web3j:web3j-gradle-plugin:$web3jVersion"
    implementation "org.jetbrains.kotlin.multiplatform:org.jetbrains.kotlin.multiplatform.gradle.plugin:$kotlinMultiPlat"
    implementation "com.github.jengelman.gradle.plugins:shadow:$shadow"
    implementation "gradle.plugin.org.hidetake:gradle-swagger-generator-plugin:$swaggerGen"
    implementation "io.swagger.core.v3:swagger-gradle-plugin:$swaggerPlugin"

    implementation("org.web3j:abi:$web3jVersion") {
        exclude group: 'org.slf4j', module: 'slf4j-nop'
    }
    implementation("org.web3j.openapi:web3j-openapi-codegen:$web3jVersion") {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
}

gradlePlugin {
    plugins {
        web3jOpenApi {
            id = 'org.web3j.openapi'
            implementationClass = 'org.web3j.openapi.gradle.plugin.OpenApiPlugin'
        }
    }
}

pluginBundle {
    website = 'https://web3j.io/'
    vcsUrl = 'https://github.com/web3j/web3j-openapi-gradle-plugin'
    description = 'Gradle plugin providing tasks to generate Web3j-OpenAPI project from Solidity.'
    tags = [
        'solidity',
        'ethereum',
        'web3.js',
        'web3j',
        'openapi'
    ]
    plugins {
        openapi {
            // id is captured from java-gradle-plugin configuration
            displayName = project.description
        }
    }
}

def generatedResources = "$buildDir/generated-resources/main"

sourceSets {
    main {
        output.dir(generatedResources, builtBy: 'generateVersionProperties')
    }
}

task generateVersionProperties {
    doLast {
        new File(generatedResources).mkdirs()
        def generated = new File(generatedResources, "version.properties")
        generated.text = "version=$rootProject.version"
    }
}

tasks.withType(Test) {
    reports.html.destination file("${reporting.baseDir}/${name}")
    useJUnitPlatform()
}
